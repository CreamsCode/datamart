name: Deploy Datamart and Hazelcast

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  validate-aws-credentials:
    name: Validate AWS Credentials
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: validate-aws-credentials

    outputs:
      hazelcast_ip: ${{ steps.save-outputs.outputs.hazelcast_ip }}
      datamart_ip: ${{ steps.save-outputs.outputs.datamart_ip }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - name: Debug Terraform Output
        run: terraform output

      - name: Get and Process Terraform Outputs
        id: save-outputs
        run: |
          # Generar delimitador Ãºnico para salida multilinea
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

          # Extraer salidas de Terraform
          hazelcast_ip=$(terraform output -raw hazelcast_public_ip 2>/dev/null || echo "ERROR")
          datamart_ip=$(terraform output -raw datamart_instance_public_ip 2>/dev/null || echo "ERROR")

          # Validar salidas
          if [ "$hazelcast_ip" = "ERROR" ] || [ -z "$hazelcast_ip" ]; then
            echo "Failed to extract Hazelcast IP."
            exit 1
          fi
          if [ "$datamart_ip" = "ERROR" ] || [ -z "$datamart_ip" ]; then
            echo "Failed to extract Datamart IP."
            exit 1
          fi

          # Limpiar posibles caracteres no deseados
          hazelcast_ip=$(echo "$hazelcast_ip" | tr -d '\r')
          datamart_ip=$(echo "$datamart_ip" | tr -d '\r')

          # Exportar IPs a GITHUB_OUTPUT
          echo "hazelcast_ip<<$EOF" >> $GITHUB_OUTPUT
          echo "$hazelcast_ip" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

          echo "datamart_ip<<$EOF" >> $GITHUB_OUTPUT
          echo "$datamart_ip" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT



  setup-datamart:
    name: Setup and Run Datamart
    runs-on: ubuntu-latest
    needs: deploy-infrastructure

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven 
        run: |
          wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xvzf apache-maven-3.9.9-bin.tar.gz
          sudo mv apache-maven-3.9.9 /opt/maven
          echo "export M2_HOME=/opt/maven" >> $GITHUB_ENV
          echo "export PATH=/opt/maven/bin:\$PATH" >> $GITHUB_ENV
          source $GITHUB_ENV
          mvn -version

      - name: Build Datamart
        run: |
          mvn clean package

      - name: Run Datamart
        run: |
          java -jar target/datamart-1.0-SNAPSHOT.jar
        env:
          HAZELCAST_IP: ${{ needs.deploy-infrastructure.outputs.hazelcast_ip }}

  cleanup:
    name: Cleanup Resources
    runs-on: ubuntu-latest
    needs: [deploy-infrastructure, setup-datamart]
    if: always()

    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Destroy Terraform Resources
        run: terraform destroy -auto-approve
